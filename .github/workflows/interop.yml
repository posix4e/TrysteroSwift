name: Interoperability Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run interop tests daily at 2 AM UTC to catch relay issues
    - cron: '0 2 * * *'

jobs:
  interop-tests:
    name: Swift ↔ Node.js Interop Tests
    runs-on: macos-14
    timeout-minutes: 20
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: Tests/Interop/package.json
        
    - name: Cache Swift packages
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Validate interop test setup
      working-directory: Tests/Interop
      run: |
        chmod +x validate-setup.sh
        ./validate-setup.sh
        
    - name: Install Node.js dependencies
      working-directory: Tests/Interop
      run: npm ci
      
    - name: Build Swift package
      run: swift build -v
      
    - name: Run interoperability tests
      working-directory: Tests/Interop
      run: |
        # Make script executable
        chmod +x run-interop-tests.sh
        
        # Run with timeout and proper error handling
        timeout 900 ./run-interop-tests.sh || {
          echo "Interop tests failed or timed out"
          exit 1
        }
        
    - name: Upload test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: interop-test-report-${{ github.run_number }}
        path: |
          Tests/Interop/interop-test-report.txt
          Tests/Interop/*.log
        retention-days: 30
        
    - name: Display test results
      if: always()
      run: |
        if [ -f "Tests/Interop/interop-test-report.txt" ]; then
          echo "=== INTEROP TEST REPORT ==="
          cat Tests/Interop/interop-test-report.txt
        else
          echo "⚠️  Test report not found"
        fi

  # Separate job for testing against multiple Trystero versions
  compatibility-matrix:
    name: Compatibility Matrix
    runs-on: macos-14
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        trystero-version: ['latest', '0.19.2', '0.19.1']
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Cache Swift packages
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Install specific Trystero version
      working-directory: Tests/Interop
      run: |
        # Create temporary package.json for specific version
        cat > package-temp.json << EOF
        {
          "name": "trystero-swift-interop-test",
          "version": "1.0.0",
          "type": "module",
          "dependencies": {
            "trystero": "${{ matrix.trystero-version }}",
            "ws": "^8.14.2"
          }
        }
        EOF
        
        mv package.json package.json.bak
        mv package-temp.json package.json
        npm install
        
    - name: Build Swift package
      run: swift build
      
    - name: Run compatibility test
      working-directory: Tests/Interop
      run: |
        chmod +x run-interop-tests.sh
        
        # Run basic interop test with shorter timeout for matrix
        timeout 600 ./run-interop-tests.sh || {
          echo "Compatibility test failed for Trystero ${{ matrix.trystero-version }}"
          exit 1
        }
        
    - name: Upload compatibility report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: compatibility-report-${{ matrix.trystero-version }}-${{ github.run_number }}
        path: Tests/Interop/interop-test-report.txt
        retention-days: 7

  # Performance benchmarking job
  performance-tests:
    name: Performance Benchmarks
    runs-on: macos-14
    timeout-minutes: 15
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: Tests/Interop/package.json
        
    - name: Install dependencies
      working-directory: Tests/Interop
      run: npm ci
      
    - name: Build Swift package
      run: swift build --configuration release
      
    - name: Run performance benchmarks
      working-directory: Tests/Interop
      run: |
        chmod +x run-interop-tests.sh
        
        # Run performance-focused tests
        echo "Running performance benchmarks..."
        timeout 450 ./run-interop-tests.sh
        
        # Extract performance metrics
        if [ -f "interop-test-report.txt" ]; then
          echo "=== PERFORMANCE METRICS ==="
          grep -E "(connection time|round-trip|throughput|latency)" interop-test-report.txt || echo "No performance metrics found"
        fi
        
    - name: Upload performance report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: performance-report-${{ github.run_number }}
        path: Tests/Interop/interop-test-report.txt
        retention-days: 90